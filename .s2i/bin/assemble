#!/bin/bash -e
#
# S2I assemble script for the 'jekyll-centos7' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

if [[ "$1" == "-h" ]]; then
  # If the 'jekyll-centos7' assemble script is executed with '-h' flag,
  # print the usage.
  exec /usr/libexec/s2i/usage
fi

# restore build artifacts
find /tmp
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  for cachedir in $(cat /tmp/src/_cachedirs); do
    echo "Restoring $cachedir to $HOME/"
    mv /tmp/artifacts/"${cachedir}" $HOME/
  done
  echo "Restoring site to /opt/app-root/src/"
  mv /tmp/artifacts/* /opt/app-root/src/
  echo "Finished restoring artifacts"
else
  echo "No previous artifacts found"
fi

DESTINATION=$(pwd)
cd /tmp/src

if [ -f "Gemfile" ]; then
  echo "---> Installing dependencies with Bundler..."

  if ! grep -Fq "json" Gemfile; then
      # Add json to Gemfile
      # Workaround for issue where json isn't installed
      echo "gem 'json'" >> Gemfile
  fi

  # Run Bundler
  bundle install
  bundle info jekyll-admin

  echo "---> Building site with Jekyll..."
  bundle exec jekyll build --destination ${DESTINATION}
else
  echo "---> Building site with Jekyll..."
  jekyll build --incremental --destination ${DESTINATION}
fi

if [ -f "_nginx.conf" ]; then
  echo "---> Installing custom nginx configuration"
  cp _nginx.conf /opt/app-root/etc/nginx.include.d/jekyll.conf
fi

